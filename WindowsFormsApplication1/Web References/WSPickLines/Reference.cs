//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApplication1.WSPickLines {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PickLines_Binding", Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public partial class PickLines_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PickLines_Service() {
            this.Url = global::WindowsFormsApplication1.Properties.Settings.Default.WindowsFormsApplication1_WSPickLines_PickLines_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PickLines")]
        public PickLines Read(string Activity_Type, string No, int Line_No) {
            object[] results = this.Invoke("Read", new object[] {
                        Activity_Type,
                        No,
                        Line_No});
            return ((PickLines)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string Activity_Type, string No, int Line_No) {
            this.ReadAsync(Activity_Type, No, Line_No, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string Activity_Type, string No, int Line_No, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        Activity_Type,
                        No,
                        Line_No}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PickLines")]
        public PickLines ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((PickLines)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PickLines[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] PickLines_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((PickLines[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(PickLines_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(PickLines_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref PickLines PickLines) {
            object[] results = this.Invoke("Update", new object[] {
                        PickLines});
            PickLines = ((PickLines)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(PickLines PickLines) {
            this.UpdateAsync(PickLines, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(PickLines PickLines, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        PickLines}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref PickLines[] PickLines_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        PickLines_List});
            PickLines_List = ((PickLines[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(PickLines[] PickLines_List) {
            this.UpdateMultipleAsync(PickLines_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(PickLines[] PickLines_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        PickLines_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/picklines:Delete", RequestNamespace="urn:microsoft-dynamics-schemas/page/picklines", ResponseElementName="Delete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/picklines", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_Result")]
        public bool Delete(string Key) {
            object[] results = this.Invoke("Delete", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key) {
            this.DeleteAsync(Key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public partial class PickLines {
        
        private string keyField;
        
        private Action_Type action_TypeField;
        
        private bool action_TypeFieldSpecified;
        
        private Activity_Type activity_TypeField;
        
        private bool activity_TypeFieldSpecified;
        
        private string noField;
        
        private int line_NoField;
        
        private bool line_NoFieldSpecified;
        
        private int source_TypeField;
        
        private bool source_TypeFieldSpecified;
        
        private Source_Subtype source_SubtypeField;
        
        private bool source_SubtypeFieldSpecified;
        
        private int source_Line_NoField;
        
        private bool source_Line_NoFieldSpecified;
        
        private Source_Document source_DocumentField;
        
        private bool source_DocumentFieldSpecified;
        
        private string source_NoField;
        
        private string item_NoField;
        
        private string variant_CodeField;
        
        private string descriptionField;
        
        private string serial_NoField;
        
        private bool serial_No_BlockedField;
        
        private bool serial_No_BlockedFieldSpecified;
        
        private string lot_NoField;
        
        private bool lot_No_BlockedField;
        
        private bool lot_No_BlockedFieldSpecified;
        
        private System.DateTime expiration_DateField;
        
        private bool expiration_DateFieldSpecified;
        
        private string location_CodeField;
        
        private string zone_CodeField;
        
        private string bin_CodeField;
        
        private string shelf_NoField;
        
        private decimal quantityField;
        
        private bool quantityFieldSpecified;
        
        private decimal qty_BaseField;
        
        private bool qty_BaseFieldSpecified;
        
        private decimal qty_to_HandleField;
        
        private bool qty_to_HandleFieldSpecified;
        
        private decimal qty_HandledField;
        
        private bool qty_HandledFieldSpecified;
        
        private decimal qty_to_Handle_BaseField;
        
        private bool qty_to_Handle_BaseFieldSpecified;
        
        private decimal qty_Handled_BaseField;
        
        private bool qty_Handled_BaseFieldSpecified;
        
        private decimal qty_OutstandingField;
        
        private bool qty_OutstandingFieldSpecified;
        
        private decimal qty_Outstanding_BaseField;
        
        private bool qty_Outstanding_BaseFieldSpecified;
        
        private System.DateTime due_DateField;
        
        private bool due_DateFieldSpecified;
        
        private string unit_of_Measure_CodeField;
        
        private decimal qty_per_Unit_of_MeasureField;
        
        private bool qty_per_Unit_of_MeasureFieldSpecified;
        
        private Shipping_Advice shipping_AdviceField;
        
        private bool shipping_AdviceFieldSpecified;
        
        private Destination_Type destination_TypeField;
        
        private bool destination_TypeFieldSpecified;
        
        private string destination_NoField;
        
        private string shipping_Agent_CodeField;
        
        private string shipping_Agent_Service_CodeField;
        
        private string shipment_Method_CodeField;
        
        private Whse_Document_Type whse_Document_TypeField;
        
        private bool whse_Document_TypeFieldSpecified;
        
        private string whse_Document_NoField;
        
        private int whse_Document_Line_NoField;
        
        private bool whse_Document_Line_NoFieldSpecified;
        
        private string special_Equipment_CodeField;
        
        private bool assemble_to_OrderField;
        
        private bool assemble_to_OrderFieldSpecified;
        
        private int pick_RouteField;
        
        private bool pick_RouteFieldSpecified;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public Action_Type Action_Type {
            get {
                return this.action_TypeField;
            }
            set {
                this.action_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Action_TypeSpecified {
            get {
                return this.action_TypeFieldSpecified;
            }
            set {
                this.action_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Activity_Type Activity_Type {
            get {
                return this.activity_TypeField;
            }
            set {
                this.activity_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Activity_TypeSpecified {
            get {
                return this.activity_TypeFieldSpecified;
            }
            set {
                this.activity_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public int Line_No {
            get {
                return this.line_NoField;
            }
            set {
                this.line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Line_NoSpecified {
            get {
                return this.line_NoFieldSpecified;
            }
            set {
                this.line_NoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Source_Type {
            get {
                return this.source_TypeField;
            }
            set {
                this.source_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Source_TypeSpecified {
            get {
                return this.source_TypeFieldSpecified;
            }
            set {
                this.source_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Source_Subtype Source_Subtype {
            get {
                return this.source_SubtypeField;
            }
            set {
                this.source_SubtypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Source_SubtypeSpecified {
            get {
                return this.source_SubtypeFieldSpecified;
            }
            set {
                this.source_SubtypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Source_Line_No {
            get {
                return this.source_Line_NoField;
            }
            set {
                this.source_Line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Source_Line_NoSpecified {
            get {
                return this.source_Line_NoFieldSpecified;
            }
            set {
                this.source_Line_NoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Source_Document Source_Document {
            get {
                return this.source_DocumentField;
            }
            set {
                this.source_DocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Source_DocumentSpecified {
            get {
                return this.source_DocumentFieldSpecified;
            }
            set {
                this.source_DocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Source_No {
            get {
                return this.source_NoField;
            }
            set {
                this.source_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Item_No {
            get {
                return this.item_NoField;
            }
            set {
                this.item_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Variant_Code {
            get {
                return this.variant_CodeField;
            }
            set {
                this.variant_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Serial_No {
            get {
                return this.serial_NoField;
            }
            set {
                this.serial_NoField = value;
            }
        }
        
        /// <remarks/>
        public bool Serial_No_Blocked {
            get {
                return this.serial_No_BlockedField;
            }
            set {
                this.serial_No_BlockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Serial_No_BlockedSpecified {
            get {
                return this.serial_No_BlockedFieldSpecified;
            }
            set {
                this.serial_No_BlockedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Lot_No {
            get {
                return this.lot_NoField;
            }
            set {
                this.lot_NoField = value;
            }
        }
        
        /// <remarks/>
        public bool Lot_No_Blocked {
            get {
                return this.lot_No_BlockedField;
            }
            set {
                this.lot_No_BlockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Lot_No_BlockedSpecified {
            get {
                return this.lot_No_BlockedFieldSpecified;
            }
            set {
                this.lot_No_BlockedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Expiration_Date {
            get {
                return this.expiration_DateField;
            }
            set {
                this.expiration_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Expiration_DateSpecified {
            get {
                return this.expiration_DateFieldSpecified;
            }
            set {
                this.expiration_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Location_Code {
            get {
                return this.location_CodeField;
            }
            set {
                this.location_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Zone_Code {
            get {
                return this.zone_CodeField;
            }
            set {
                this.zone_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Bin_Code {
            get {
                return this.bin_CodeField;
            }
            set {
                this.bin_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shelf_No {
            get {
                return this.shelf_NoField;
            }
            set {
                this.shelf_NoField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_Base {
            get {
                return this.qty_BaseField;
            }
            set {
                this.qty_BaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_BaseSpecified {
            get {
                return this.qty_BaseFieldSpecified;
            }
            set {
                this.qty_BaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_to_Handle {
            get {
                return this.qty_to_HandleField;
            }
            set {
                this.qty_to_HandleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_to_HandleSpecified {
            get {
                return this.qty_to_HandleFieldSpecified;
            }
            set {
                this.qty_to_HandleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_Handled {
            get {
                return this.qty_HandledField;
            }
            set {
                this.qty_HandledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_HandledSpecified {
            get {
                return this.qty_HandledFieldSpecified;
            }
            set {
                this.qty_HandledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_to_Handle_Base {
            get {
                return this.qty_to_Handle_BaseField;
            }
            set {
                this.qty_to_Handle_BaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_to_Handle_BaseSpecified {
            get {
                return this.qty_to_Handle_BaseFieldSpecified;
            }
            set {
                this.qty_to_Handle_BaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_Handled_Base {
            get {
                return this.qty_Handled_BaseField;
            }
            set {
                this.qty_Handled_BaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_Handled_BaseSpecified {
            get {
                return this.qty_Handled_BaseFieldSpecified;
            }
            set {
                this.qty_Handled_BaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_Outstanding {
            get {
                return this.qty_OutstandingField;
            }
            set {
                this.qty_OutstandingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_OutstandingSpecified {
            get {
                return this.qty_OutstandingFieldSpecified;
            }
            set {
                this.qty_OutstandingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_Outstanding_Base {
            get {
                return this.qty_Outstanding_BaseField;
            }
            set {
                this.qty_Outstanding_BaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_Outstanding_BaseSpecified {
            get {
                return this.qty_Outstanding_BaseFieldSpecified;
            }
            set {
                this.qty_Outstanding_BaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime Due_Date {
            get {
                return this.due_DateField;
            }
            set {
                this.due_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Due_DateSpecified {
            get {
                return this.due_DateFieldSpecified;
            }
            set {
                this.due_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Unit_of_Measure_Code {
            get {
                return this.unit_of_Measure_CodeField;
            }
            set {
                this.unit_of_Measure_CodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty_per_Unit_of_Measure {
            get {
                return this.qty_per_Unit_of_MeasureField;
            }
            set {
                this.qty_per_Unit_of_MeasureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty_per_Unit_of_MeasureSpecified {
            get {
                return this.qty_per_Unit_of_MeasureFieldSpecified;
            }
            set {
                this.qty_per_Unit_of_MeasureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Shipping_Advice Shipping_Advice {
            get {
                return this.shipping_AdviceField;
            }
            set {
                this.shipping_AdviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Shipping_AdviceSpecified {
            get {
                return this.shipping_AdviceFieldSpecified;
            }
            set {
                this.shipping_AdviceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Destination_Type Destination_Type {
            get {
                return this.destination_TypeField;
            }
            set {
                this.destination_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Destination_TypeSpecified {
            get {
                return this.destination_TypeFieldSpecified;
            }
            set {
                this.destination_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Destination_No {
            get {
                return this.destination_NoField;
            }
            set {
                this.destination_NoField = value;
            }
        }
        
        /// <remarks/>
        public string Shipping_Agent_Code {
            get {
                return this.shipping_Agent_CodeField;
            }
            set {
                this.shipping_Agent_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shipping_Agent_Service_Code {
            get {
                return this.shipping_Agent_Service_CodeField;
            }
            set {
                this.shipping_Agent_Service_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Shipment_Method_Code {
            get {
                return this.shipment_Method_CodeField;
            }
            set {
                this.shipment_Method_CodeField = value;
            }
        }
        
        /// <remarks/>
        public Whse_Document_Type Whse_Document_Type {
            get {
                return this.whse_Document_TypeField;
            }
            set {
                this.whse_Document_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Whse_Document_TypeSpecified {
            get {
                return this.whse_Document_TypeFieldSpecified;
            }
            set {
                this.whse_Document_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Whse_Document_No {
            get {
                return this.whse_Document_NoField;
            }
            set {
                this.whse_Document_NoField = value;
            }
        }
        
        /// <remarks/>
        public int Whse_Document_Line_No {
            get {
                return this.whse_Document_Line_NoField;
            }
            set {
                this.whse_Document_Line_NoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Whse_Document_Line_NoSpecified {
            get {
                return this.whse_Document_Line_NoFieldSpecified;
            }
            set {
                this.whse_Document_Line_NoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Special_Equipment_Code {
            get {
                return this.special_Equipment_CodeField;
            }
            set {
                this.special_Equipment_CodeField = value;
            }
        }
        
        /// <remarks/>
        public bool Assemble_to_Order {
            get {
                return this.assemble_to_OrderField;
            }
            set {
                this.assemble_to_OrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Assemble_to_OrderSpecified {
            get {
                return this.assemble_to_OrderFieldSpecified;
            }
            set {
                this.assemble_to_OrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Pick_Route {
            get {
                return this.pick_RouteField;
            }
            set {
                this.pick_RouteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Pick_RouteSpecified {
            get {
                return this.pick_RouteFieldSpecified;
            }
            set {
                this.pick_RouteFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Action_Type {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Take,
        
        /// <remarks/>
        Place,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Activity_Type {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Put_away,
        
        /// <remarks/>
        Pick,
        
        /// <remarks/>
        Movement,
        
        /// <remarks/>
        Invt_Put_away,
        
        /// <remarks/>
        Invt_Pick,
        
        /// <remarks/>
        Invt_Movement,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Source_Subtype {
        
        /// <remarks/>
        _x0030_,
        
        /// <remarks/>
        _x0031_,
        
        /// <remarks/>
        _x0032_,
        
        /// <remarks/>
        _x0033_,
        
        /// <remarks/>
        _x0034_,
        
        /// <remarks/>
        _x0035_,
        
        /// <remarks/>
        _x0036_,
        
        /// <remarks/>
        _x0037_,
        
        /// <remarks/>
        _x0038_,
        
        /// <remarks/>
        _x0039_,
        
        /// <remarks/>
        _x0031_0,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Source_Document {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Sales_Order,
        
        /// <remarks/>
        Sales_Return_Order,
        
        /// <remarks/>
        Purchase_Order,
        
        /// <remarks/>
        Purchase_Return_Order,
        
        /// <remarks/>
        Inbound_Transfer,
        
        /// <remarks/>
        Outbound_Transfer,
        
        /// <remarks/>
        Prod_Consumption,
        
        /// <remarks/>
        Prod_Output,
        
        /// <remarks/>
        Service_Order,
        
        /// <remarks/>
        Assembly_Consumption,
        
        /// <remarks/>
        Assembly_Order,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Shipping_Advice {
        
        /// <remarks/>
        Partial,
        
        /// <remarks/>
        Complete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Destination_Type {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        Vendor,
        
        /// <remarks/>
        Location,
        
        /// <remarks/>
        Item,
        
        /// <remarks/>
        Family,
        
        /// <remarks/>
        Sales_Order,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum Whse_Document_Type {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Receipt,
        
        /// <remarks/>
        Shipment,
        
        /// <remarks/>
        Internal_Put_away,
        
        /// <remarks/>
        Internal_Pick,
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        Movement_Worksheet,
        
        /// <remarks/>
        Assembly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public partial class PickLines_Filter {
        
        private PickLines_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public PickLines_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/picklines")]
    public enum PickLines_Fields {
        
        /// <remarks/>
        Action_Type,
        
        /// <remarks/>
        Activity_Type,
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Line_No,
        
        /// <remarks/>
        Source_Type,
        
        /// <remarks/>
        Source_Subtype,
        
        /// <remarks/>
        Source_Line_No,
        
        /// <remarks/>
        Source_Document,
        
        /// <remarks/>
        Source_No,
        
        /// <remarks/>
        Item_No,
        
        /// <remarks/>
        Variant_Code,
        
        /// <remarks/>
        Description,
        
        /// <remarks/>
        Serial_No,
        
        /// <remarks/>
        Serial_No_Blocked,
        
        /// <remarks/>
        Lot_No,
        
        /// <remarks/>
        Lot_No_Blocked,
        
        /// <remarks/>
        Expiration_Date,
        
        /// <remarks/>
        Location_Code,
        
        /// <remarks/>
        Zone_Code,
        
        /// <remarks/>
        Bin_Code,
        
        /// <remarks/>
        Shelf_No,
        
        /// <remarks/>
        Quantity,
        
        /// <remarks/>
        Qty_Base,
        
        /// <remarks/>
        Qty_to_Handle,
        
        /// <remarks/>
        Qty_Handled,
        
        /// <remarks/>
        Qty_to_Handle_Base,
        
        /// <remarks/>
        Qty_Handled_Base,
        
        /// <remarks/>
        Qty_Outstanding,
        
        /// <remarks/>
        Qty_Outstanding_Base,
        
        /// <remarks/>
        Due_Date,
        
        /// <remarks/>
        Unit_of_Measure_Code,
        
        /// <remarks/>
        Qty_per_Unit_of_Measure,
        
        /// <remarks/>
        Shipping_Advice,
        
        /// <remarks/>
        Destination_Type,
        
        /// <remarks/>
        Destination_No,
        
        /// <remarks/>
        Shipping_Agent_Code,
        
        /// <remarks/>
        Shipping_Agent_Service_Code,
        
        /// <remarks/>
        Shipment_Method_Code,
        
        /// <remarks/>
        Whse_Document_Type,
        
        /// <remarks/>
        Whse_Document_No,
        
        /// <remarks/>
        Whse_Document_Line_No,
        
        /// <remarks/>
        Special_Equipment_Code,
        
        /// <remarks/>
        Assemble_to_Order,
        
        /// <remarks/>
        Pick_Route,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PickLines Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PickLines)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PickLines Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PickLines)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PickLines[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PickLines[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PickLines PickLines {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PickLines)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PickLines[] PickLines_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PickLines[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591